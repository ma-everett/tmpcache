{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Temporary cache written in C with Crossroads I/O library providing the network interface.  ","google":"","name":"tmpcache","body":"tmpcache\r\n========\r\nversion 0 | A Work in Progress\r\n---------\r\n\r\nIn memory temporary cache written in C with \r\n[ZeroMQ](http://www.zeromq.org) providing the network\r\ninterface, for GNU/Linux.\r\n\r\nThis is by no means a finished production ready solution for caching data,\r\nthere is much still to do. \r\n\r\nBuild and Install\r\n------------------\r\n\r\nYou will need [ZeroMQ](http://www.zeromq.org) 3.x installed. \r\nOptionally you may want [Tiny CDB library](http://www.corpit.ru/mjt/tinycdb.html) installed for snapshotting. \r\n\r\n    > ./configure\r\n    > make\r\n\r\nCurrently no install target, as there is no production ready code to use.\r\n\r\nRunning\r\n----------------\r\n\r\n    > tmpcache_host dir raddress waddress \r\n\r\nWhere _waddress_ (for writing) and _raddress_ (for reading) is \r\nan zmq adddress in one of the following forms.\r\n\r\n1. ipc:///tmp/write.tmpcache\r\n2. tcp://127.0.0.1:8888 \r\n\r\n_dir_ is the directory (absolute path) where the cache will reside. To \r\nimprove the performance, use a *tmpfs* for the cache directory. \r\n\r\nYou can run numerous copies of *tmpcache* provided you use different network addresses. For instance, you can run many read-only instance, each with a different network address and a single write-only instance. \r\n\r\nRunning with Tmpfs\r\n-------------------\r\n\r\nCreate a *tmpfs* \r\n\r\n    > sudo mount -t tmpfs -o size=64m tmpfs /srv/tmpcache\r\n    > sudo chown tmpcache:tmpcache /srv/tmpcache\r\n\r\nRun tmpcache instance for writing on an inter-process communication address.\r\n\r\n    > tmpcache_write /srv/tmpcache ipc:///tmp/run/tmpcache.write &\r\n\r\nNow run a read instace on a TCP network address\r\n\r\n    > tmpcache_read /srv/tmpcache tcp://localhost:9898\r\n \r\n*tmpcache* can be stopped by sending a TERM signal. \r\n\r\nSnapshotting to CDB or another cache\r\n------------------------------------\r\n\r\n    > tmpcache_dump /srv/tmpcache ipc:///tmp/run/tmpcache2.write\r\n\r\nUsing [ezcdb](http://b0llix.net/ezcdb/) to create a cdb file\r\n\r\n    > tmpcache_dump /srv/tmpcache | ezcdb make cache.cdb\r\n\r\nWe can then use the new cdb file as a read-only cache\r\n\r\n    > tmpcache_read cache.cdb tcp://localhost:9898\r\n"}